*briofita.txt*	Companion help to Briofita, a customizable dark colorscheme

+--------------+-------------------------------------------------------------+
|   *briofita*   |  A Vim help companion to the Briofita colorscheme with      |
|              |  explanations about it, particularly on how to set its      |
|              |  global variables (parameters) in order to customize it.    |
|              |  Only a few users will need to read the help items -- the   |
|              |  author supposes -- because there are suitable defaults.    |
|              +-------------------------------------------------------------+
|              |  `Briofita`  version   v2.0.3                                 |
|              |  Author:   Sergio Nobre (sergio.o.nobre at gmail dot com)   |
|              |  Licence:  The VIM LICENCE applies to Briofita.             |
+--------------+-------------------------------------------------------------+


==============================================================================
TABLE OF CONTENTS                      {{{1                                *TOC*
==============================================================================

 1. About Briofita .............................. |briofita-about|
    1.1. Help file .............................. |briofita-about-the-help|
    1.2. Applications ........................... |briofita-applications|
 2. Installation ................................ |briofita-installation|
 3. Plugin Functions ............................ |briofita-functions|
 4. Distractionless mode ........................ |briofita-distractionless|
    4.1. Example ................................ |briofita-distr-example|
 5. Options overview ............................ |briofita-options|
    5.1. Parameters ............................. |briofita-parameters|
    5.2. Options usage .......................... |briofita-options-usage|
    5.3. Option example ......................... |briofita-option-example|
 6. List of options ............................. |briofita-options-list|
 7. Options description ......................... |briofita-options-description|
    7.1. Color Column ........................... |briofita-colorcolumn|
    7.2. Search ................................. |briofita-search|
    7.3. Normal ................................. |briofita-normal|
    7.4. Cursor Line Number ..................... |briofita-cursorlinenr|
    7.5. Cursor Line and Local Cursor Line....... |briofita-cursorline|
    7.6. Folded ................................. |briofita-folded|
 8. Performance ................................. |briofita-performance|
 9. Issues ...................................... |briofita-known-issues|
10. History ..................................... |briofita-history|
11. TODO ........................................ |briofita-todo|


==============================================================================
1
ABOUT BRIOFITA                         {{{1                     *briofita-about*


`Briofita` is a GUI colorscheme whose background shows by default a shaded dark
green color. Under its style different file types may have different renderings
for similar items. A few syntax items use high contrast color -- or underlined
or reversed text -- in order to call the user attention to editing events like
a search term that is matched, the presence of a syntax error, etc.

Originally this colorscheme was just a tweaked version of `Moss` (vimscript
#2779), with few changes for personal preferences; inspired by some favorite
colorschemes, other features were added along the time; then it was
restructured to use a color dictionary similar to the one used by the
`Distinguished` colorscheme (vimscript #3529).

Briofita is NOT a minimalist colorscheme. It has MANY highlights.
In designing it the author tried to cover a lot of syntaxes, targeted for
work or study or research. Naturally the most tested ones were those of daily
use but all have had a special touch. (Note that the part of Briofita that
implements distraction-less editing is still experimental.)

This colorscheme was not designed for color blinded people: it has many
highlights which use red, for example. And, too, it is not recommended
for use in systems which are low in memory or have older CPUs, due to having
an unusually high number of highlights.

Currently Briofita is released with two companion files besides the
colorscheme: a help file and an example plugin ("briofita-support").

The author uses and recommends the Vim plugin "tabpagecolorscheme"
(vimscript #3358, http://www.vim.org/scripts/script.php?script_id=3358). It
allows a different colorscheme to be active in each tabpage. The Briofita
companion plugin, briofita-support, has an example of calling a command of
the tabpagecolorscheme plugin. (There is no problem if you have Briofita active
in more than one tabpage.)

New releases of Briofita can be downloaded from its page in the Vim online site:
        http://www.vim.org/scripts/script.php?script_id=4136.

------------------------------------------------------------------------------

                                                                           |TOC|


------------------------------------------------------------------------------
1.1                                    {{{2            *briofita-about-the-help*
HELP FILE~

About this help:~
It is quite uncommon to have a help file for a Vim colorscheme. It is provided
for Briofita because a need was felt for something like a usage guide for
those users who would want to use its global parameter variables to customize
its behavior.

Briofita had no user help before version 2, just some explanations provided
by a few entries in its Vim website page. But the online text became difficult
to maintain as new versions were released, so it was decided to put that text
in a separate file.

All technical details have been deleted from the Vim Online page for Briofita.
The webpage now refers the reader to this Vim helpfile for further information.

                                                                           |TOC|


------------------------------------------------------------------------------
1.2                                    {{{2              *briofita-applications*
APPLICATIONS~

The colorscheme, once installed, works seamlessly. It can be used for any
plain text file, but it has customized settings for some syntaxes. Currently
supported are common programming languages, lightweight mark-up tools and,
too, the Vim plugins used by the author.

The list below sorts the applications into two categories according to the
number of elements in the syntax (alphabetically listed):

Syntaxes with 30 or more highlights each~
>
	Asciidoc, C and C++, Java, Javascript, Markdown,
	Perl, Python, Ruby, Shellscript, Vimscript
<
Syntaxes with 10 to 29 highlights each~
>
	Awk, CSS, HTML/XHTML and XML, Ocaml,
	PL/SQL and SQL, Sed, Tex, Vim Help
<
Here is another list, this one grouping the applications per usage:

Programming languages~
>
    - Java, C/C++
    - Javascript
    - Perl, Python, Ruby
    - Unix Shell scripts
    - SQL, PL/SQL
    - Vimscript language
<
Lightweight markup tools~
>
	- Asciidoc, Fountain, Markdown
<
Web page editing~
>
	- HTML / XHTML
	- XML
	- CSS
<
Customized highlights for Vim plugins~
>
	BufferSaurus / BufferGator, IndentGuides, log4j, ListMaps, ManpageView,
	NERDTree, Netrw,  TabMan, TagList and some snippets plugins
<

                                                                           |TOC|


==============================================================================
2
INSTALLATION                           {{{1              *briofita-installation*

NOTE: Up to now Briofita has been tested only on Unix / Linux.

Briofita is released as a packed file (zip).

Just unpack it and move the files from the "colors", "doc" and "plugin"
directories into the respective directories of your ".vim" directory.

In case you use Pathogen (ou similar bundle-based plugins) create a
".vim/bundle/briofita" directory and move the directory tree of the
unpacked file into it.

Then do ":helptags" (for Pathogen users, ":Helptags").

Read the hints about using Briofita and its customization parameters in the
help file:
>
			:help briofita
<
Edit your ".vimrc" file to add the parameters you like.

Then open another instance of GUI Vim and execute the following command:
>
			:color briofita
<
If you have installed the TabPageColorscheme plugin, which is recommended, the
command above may be replaced by the following one:
>
 			:Tcolorscheme briofita
<
You may add one of the above commands to your ".vimrc" so that Briofita will
be active at start-up, automatically.

                                                                           |TOC|


==============================================================================
2
PLUGIN FUNCTIONS                           {{{1             *briofita-functions*

The companion plugin, "briofita-support.vim" has EXAMPLES of usage. The idea
is that the users use the source as a base for their own plugins.

Implemented functions:

	g:BriofitaParmSet(strKey, strValue)~

	  auxiliary function that makes it easier to set a Briofita dictionary
	  parameter

	g:BriofitaGlobal(highlight,startpoint)~

	  auxiliary function to set a parameter for all tabpages

	g:BriofitaLocal(highlight,startpoint)~

	  auxiliary function to set a parameter for the current tabpage

	g:BriofitaCycle(highlightname)~

	  auxiliary function for cycling some parameter (rotation of values)

	g:BriofitaCycleCL(...)~

	  auxiliary function for cycling the CursorLine and CursorColumn parameters

	g:BriofitaInterfaceVars()~

	  shows the values of the parameters (ie the user interface)

	g:CursorlineCommander(be_local,cycle_start_point)~

	  example of a function that could set the user choices

	g:BriofitaMenu()~

	  auxiliary function that builds a menu that has entries for showing
	  parameters, cycling, etc.; by default the menu is inserted into the
	  Plugin root menu.

	g:BriofitaVersion()~

    . Call g:BriofitaVersion() to obtain version information.
	  The command below will show a string with the colorscheme version number:
>
		  :echo g:BriofitaVersion().
<
	. If Briofita is the current color additional information is shown.

	. This is an example of the string returned by this function when the
	  current colorscheme is Briofita (the text below has been broken into
	  more than one line for an easier reading of this help file):
>
        'Briofita v2.0.3
			Curr.Settings{
			     *ColorColumn[0-3]=0
				 *CursorLine[0-8]=8
				 *CursorLineNr[0-3]=0
				 *Normal[0-4]=0
				 *Search[0-5]=5
				 *Folded[0-4]=0 }'
<
    . Shown above: the Briofita version number and the current options for
	  the parameters having these names: "colorcolumn", "cursorline",
	  "cursorlinenr", "normal", "search" and "folded".

	. Expressions like
>
	         "[0-3]"
<
	  that appear after the option name are reminders for the allowable ranges
	  of the corresponding variable (parameter).

                                                                           |TOC|


==============================================================================
4
DISTRACTIONLESS MODE                   {{{1           *briofita-distractionless*


Briofita has some BASIC support for distraction-less editing.
In this mode some visual elements have low visibility or are almost hidden.
Only in this mode does Briofita set User1-User9 highlights so that the
statusline becomes almost hidden (otherwise these highlights are left for your
preferred statusline plugin).

For an effective use you will likely need to make additional settings as, for
example,
>
            :set nonumber.
<
Ideally these additional settings should be placed in your .vimrc or in some
plugin. An example of usage is in section 5.1 below.

NOTE: This feature is yet in an early stage of development. Let me know of
      any bug or malfunction.

Tabpagecolorscheme plugin~
The Tabpagecolorscheme plugin is recommended. It makes your tabpages "remember"
their colorscheme. Get it from the Vim site:
http://www.vim.org/scripts/script.php?script_id=3358. NOTE that some examples
given here assume you have that plugin installed.

Variable t:briofita_nodistractionmode~
This is the commanding variable for this mode. There are only TWO possible
values for this variable. Zero makes the highlights used for this mode to have
the typical Briofita background style. One makes the background be black.

Entering no-distraction mode on a tab~
Follow this procedure:
>
   - create the above mentioned tabpage-local variable: use the 'let' command;
   - click on another tabpage (or create an empty one);
   - click back on the first tabpage.
<
NOTE Clicking out and in again is necessary for the colorscheme to get to know
about the existence and contents of the tabpage-local variable. Let me know
if you know some technically feasible way of avoiding this clicking!

Changing no-distraction mode numeric option on the same tab~
If, on a tabpage, you used option 1 and want to change to option 0 (or the
reverse):
>
   - in the same tabpage do a 'let' command to change the variable value;
   - click on another tabpage (or create an empty one);
   - click back on the first tabpage.
<

Leaving no-distraction mode on a tab and staying there in common mode~
If, after a session of no-distraction mode, you want to shift to the common
editing mode (ie, the non-distractionless mode) in the same tabpage, you should
follow this procedure:
>
   - delete the variable: issue an UNLET command upon it;
   - click on another tabpage (or create an empty one);
   - click back on the first tabpage.
<
NOTE 1: The mere existence of the above variable implies that the
		no-distraction mode is in effect in the tabpage. That explains
		why we need to `unlet` it.

NOTE 2: It is more practical to close! the tabpage and work with
		another. Remember that Vim allows you to have the same buffer
		open in more than one place!

                                                                           |TOC|


------------------------------------------------------------------------------
4.1                                    {{{2             *briofita-distr-example*
EXAMPLE OF DISTRACTIONLESS EDITING~

The below sequence of command-line instructions show how to try a simple
example of distractionless editing.

(1) Open a new tab page, set the proper global variable and reload the
    colorscheme:
>
         :tabnew
         :let t:briofita_nodistractionmode=0
         :colorscheme briofita
<

(2) Edit a few lines for a test.

(3) When done, and BEFORE proceeding to common, non-distractionless editing:

     - either (in the same tab) DELETE the global variable:
>
         :unlet t:briofita_nodistractionmode
<
     - or CLOSE the tabpage (this will bring you to another tab, or to the
	   remaining tab):
>
         :tabclose!
<
     - or OPEN a new tabpage (this will put you in the new tab):
>
		 :tabnew!
<
(4) If you stayed on the same tab (the first alternative above), reload the
    colorscheme with this command:
>
         :colorscheme briofita
<                                                                          |TOC|

==============================================================================
5
OPTIONS OVERVIEW                       {{{1                   *briofita-options*


Briofita comes with default settings so that most users will not need to change
anything. But global variable options are provided and may be used to change
the way the syntax items are displayed. These options were implemented as a
way to cope with the following issues:
>
	-	in certain cases the same color displays DIFFERENTLY on different
		HARDWARE: a highlight that is brightly colored on the desktop might
		be too dim on the laptop, for example;

	-	sometimes the particular SYNTAX we use has some choice of highlights
		that does not show well in the text we edit (usually with rarely used
		or poorly tested syntax files);

	-	during long editing hours our MOOD benefits from a change in the way
		the file is displayed; Briofita was devised so that a PLUGIN could
		easily map to user CLICKS a set of alternative highlights.
<
Obviously we can try different colorschemes to see if a change in the choice
of highlights somewhat fixes the issue. For that matter, it is a good practice
to have "accessible at a button click" some preferred schemes. Briofita indeed
tries to provide this benefit without having to the switch to other colorscheme.

The available options allow you to change the display of a few selected syntax
items. For EXAMPLE:
>
	- ColorColumn;
    - CursorLine and CursorColumn;
    - Search and DiffText.
    - etc.
<
All the options are specified via numeric parameters designed to enable user
functions or plugins to easily make option "rotation" by clicking on menus or
tool bar buttons. Their defaults are all assigned to zero.

Global variable options are described in detail in the topic "Options list"
below (see |briofita-options-description|).
                                                                           |TOC|


------------------------------------------------------------------------------
5.1                                     {{{2              *briofita-parameters*
PARAMETERS~

A global dictionary is provided for most of the user-assignable parameters.
Check the Vim help about dictionaries, if necessary:
>
	:help Dictionaries
<
NOTE: Unless otherwise noted, when we refer here on to "dictionary" we mean
the "g:briofita_parms" dictionary.

The parameters are keys in the dictionary, read by Briofita.

The colorscheme creates a global list, g:briofita_allowed_parms, with the
allowed keys, which the user may view by using
>
	:echo g:briofita_allowed_parms
<
(Please do not change the contents of the above list. This version of the
colorscheme does not implement security checks on this variable.)

Each dictionary key is a Briofita option ("parameter"). Some keys hold numbers
or strings. Some are "boolean"-like: these may have a number 0 or 1 as value,
and we will sometimes call them "flags".

Each key is an all-lowercase string.
Example of use:
>
	" FIRST EXAMPLE: existing dictionary; Search highlight key
    let g:briofita_parms['search'] = 3

	" SECOND EXAMPLE: creating a dictionary, and setting two parameters
    let g:briofita_parms = { 'search': 3, 'localcursorline':0 }
<
NOTE: the 'localcursorline' is a required parameter, you need to specify it
      when creating a new dictionary.

------------------------------------------------------------------------------

                                                                           |TOC|


------------------------------------------------------------------------------
5.2                                    {{{2             *briofita-options-usage*
OPTIONS USAGE~

Recommended usage of options~

Vim 'let' commands are used to set the global variables with the user choices.
Check the "FIRST EXAMPLE" in section 5.1 above.

You may put these 'let' commands in your '.vimrc' file.
Or in a plugin (check the plugin example, released with the colorscheme).

For the CursorLine settings it is recommended that you create tool bar buttons
so that each time you click on them a new option is in effect
for the current tab page; such that you have a quick and easy rotation between
your preferred settings. The effects will more easily be shown if you use the
TabPageColorscheme plugin (vimscript #3358).

The companion plugin has an example of cycling CursorLine colors via menu.
Just
>
	:call BriofitaMenu()
<
or put this command in your ".gvimrc".

NOTE: There is a customization variable for positioning the menu built by
the plugin, "g:briofita_root_menu". If not specified, the plugin inserts
the menu into a "Plugin" main menu.


------------------------------------------------------------------------------
Note: For details on creating menus or toobar buttons look at Vim Help:
>
                    :help creating-menus
<     or
>
                    :help gui-toolbar.
<                                                                          |TOC|


------------------------------------------------------------------------------
5.3                                    {{{2            *briofita-option-example*
OPTION EXAMPLE ~

General example of option usage~

Issue the command below in Vim command line. It may change your Search
highlight background:

>
    :let g:briofita_parms['search'] = 2
<
Notice that the effect of this command may not be immediate because the
colorscheme is not aware of command line events. You may need to source it
with the command
>
        :colorscheme briofita.
<
It is recommended to use the TabPageColorscheme plugin. If so re-source the
colorscheme by clicking on another tabpage and then click back on the original
tab.

(Command line examples above are just examples. The ideal place for settings
like these would be in a Vimscript, or in your ".vimrc" file).
                                                                           |TOC|



==============================================================================
6
LIST OF OPTIONS                        {{{1              *briofita-options-list*


Below is a list of the options or parameters which the user can set.
Their descriptions are pointed to by the hypertext links.

------------------------------------------------------------------------------
ColorColumn~
			key: 'colorcolumn'                            |briofita-colorcolumn|

CursorLine~
			key: 'cursorline'                              |briofita-cursorline|
			key: 'localcursorline'
			variable: t:briofita_choice_for_cursorline

CursorLineNr~
			key: 'cursorlinenr'                          |briofita-cursorlinenr|

Folded~
			key: 'folded'                                      |briofita-folded|

Normal~
			key: 'normal'                                      |briofita-normal|

Search~
			key: 'search'                                      |briofita-search|

------------------------------------------------------------------------------

                                                                           |TOC|



==============================================================================
7
OPTIONS DESCRIPTION                    {{{1       *briofita-options-description*


Each Briofita global option is listed and explained in the topics that follow.
                                                                           |TOC|


------------------------------------------------------------------------------
7.1                                    {{{2               *briofita-colorcolumn*
COLOR COLUMN ~

------------------------------------------------------------------------------
Note: This option is related to the Vim 'colorcolumn' setting. Check Vim Help:
>
                :help 'colorcolumn.
<     If you usually do NOT use this option in Vim you may SKIP this section.
------------------------------------------------------------------------------

Option Applies To: ColorColumn highglight
Option Variable:   g:briofita_parms['colorcolumn']

Example:
>
    let g:briofita_parms['colorcolumn'] = 1
<
The highlight color associated with ColorColumn may be set by assigning
one of the numbers in this list: [0, 1, 2]
>
  Default is zero. You may check the source code of the colorscheme for
  more details. Or experiment with these alternative settings in order to
  find the one you like.
<                                                                          |TOC|


------------------------------------------------------------------------------
7.2                                    {{{2                    *briofita-search*
SEARCH~

------------------------------------------------------------------------------
Note: This option is related to the search operations in Vim. Check Vim Help:
>
                :help usr_27.
<
      Notice that the Search highlight may be shown or hidden, depending on
	  some conditions. Read the below topics on the Vim Help:
>
				:help 'hlsearch
				:help :nohlsearch
<
	  All the explanation in this section assumes that the boolean option
	  'hlsearch is ON. If you normally do not use the 'hlsearch option (if it
	  is OFF) you may SKIP this topic.
------------------------------------------------------------------------------

Option Applies To: Search highlight
Option Variable:   g:briofita_parms['search']

Example:
>
    let g:briofita_parms['search'] = 1
<

This option allows you to change the highlight style of the normal mode
star (`*`) and search (`/`) commands.

Notice that there are some other settings coupled with this
option. Each time you change the Search option you get different highlights
for them. (Read the source code for details.)

The highlight color associated with Search may be set by assigning
one of the numbers in this list: [0, 1, 2, 3, 4, 5]
>
  Default is zero. You may check the source code of the colorscheme for
  more details. Or experiment with these alternative settings in order to
  find the one you like.
<                                                                          |TOC|


------------------------------------------------------------------------------
7.3                                    {{{2                    *briofita-normal*
NORMAL~

Option Applies To: Normal highlight
Option Variable:   g:briofita_parms['normal']

Example:
>
    let g:briofita_parms['normal'] = 2
<

The Normal highlight is applied to the common text, the one that has no
distinct syntax.

Available options range from 0 to 4. Zero is the default.

When the text you are currently editing has a syntax that makes too many items
to be "Normal" you might want something different from the default: try one of
the non-defaults to see if it gets a better appearance.

NOTE: Some settings have been coupled with this (linked together) for
convenience.
>
<                                                                          |TOC|


------------------------------------------------------------------------------
7.4                                    {{{2              *briofita-cursorlinenr*
CURSORLINENR~

------------------------------------------------------------------------------
Note: This option is related to the Vim 'number' option. Check Vim Help:
>
                :help 'number.
<     If you do NOT usually have line numbering in your editing sessions, you
      may SKIP this section.
------------------------------------------------------------------------------

Option Applies To: CursorLineNr highlight
Option Variable:   g:briofita_parms['cursorlinenr']

Example:
>
    let g:briofita_parms['cursorlinenr'] = 2
<

Line number highlight, meaningful only for recent versions of Vim. Options in
the range shown by this list: [0,1].
                                                                           |TOC|


------------------------------------------------------------------------------
7.5                                    {{{2                *briofita-cursorline*
CURSOR LINE~
LOCAL CURSOR LINE~
CURSOR COLUMN~

------------------------------------------------------------------------------
Note: cursorline and cursorcolumn are Vim boolean options which you may or may
      not use. For an explanation of them check Vim Help:
>
                :help 'cursorline
                :help 'cursorcolumn
<     If you do NOT usually have 'cursorline' or 'cursorcolumn' set in your
      Vim, you may SKIP this section.
------------------------------------------------------------------------------

Option Applies To: CursorLine and CursorColumn highlights

Option Variables:
                   g:briofita_parms['cursorline']
                   g:briofita_parms['localcursorline']
                   t:briofita_choice_for_cursorline

Example:
>
    let g:briofita_parms['cursorline'] = 1
<
Two different ways allow an easy change of the CursorLine and the
CursorColumn styles. This is a case of coupled highlights setting; the above
variables affect both CursorLine and CursorColumn highlights at once.
Their usage depends on you wanting the same setting for all tabpages or else a
different one for each tabpage.

localcursorline~

    The flag 'localcursorline' may have 0 or 1 values.
	If its value is 0, the 'cursorline' parameter applies to all tabpages.
	Otherwise, the 'cursorline' parameter applies to the current tabpage.
	(This is a REQUIRED parameter, it should always exist in the dictionary.)

Example of Setting CursorLine so it Applies to All Tabpages~

    If you want the SAME CursorLine/Column style in all your tab pages,
    use the "g:" dictionary as follows (and do not set or change the
	above mentioned "t:" variable):
>
			let g:briofita_parms['localcursorline'] = 0
			let g:briofita_parms['cursorline'] = 2
<

Example Setting CursorLine as Applied Only to the Current Tabpage~

    If you want DIFFERENT CursorLine/Column styles then do as follows FOR
    THE TAB PAGE WHERE YOU ARE (ie for each tab page where you want it) do
	as follows:
>
					let g:briofita_parms['localcursorline'] = 1
                    set t:briofita_choice_for_cursorline=3
<
The CursorLine numeric options are in this range: 0...8.

------------------------------------------------------------------------------
Note: This parameter applies to CursorColumn, too. (There is NO corresponding
key name "cursorcolumn".)
------------------------------------------------------------------------------
                                                                           |TOC|


------------------------------------------------------------------------------
7.6                                    {{{2                    *briofita-folded*
FOLDED~

------------------------------------------------------------------------------
Note: This option is related to the way Vim shows folded items.
      If you do NOT use folding you may SKIP this section.
------------------------------------------------------------------------------

Option Applies To: Folded highlight
Option Variable:   g:briofita_parms['folded']

Example:
>
    let g:briofita_parms['folded'] = 2
<

This option affects the display of folded items. The numerical values
of this option range from zero to four. A proper default is set to zero.

If you want to use a non-default value, assign 1, 2, 3 or 4 to the variable
and then visually check if you like the result.

                                                                           |TOC|


==============================================================================
8
PERFORMANCE                            {{{1               *briofita-performance*

This colorscheme has a LOT of syntax groups. I suppose that some users,
depending on their hardware, might detect some slowness while using it.
If this happens to you, let me know. (I have been using it for about two years
with no problem.)

                                                                           |TOC|


==============================================================================
9
ISSUES                                 {{{1              *briofita-known-issues*

Vim Help File Editing~

When you are editing a Vim help file of yours which has a modeline that
specifies 'ft=help', and then you do ':tab help some-other-help-item' which is
located in another help file, the text of the second help will be shown as if
it were being edited too (in insert mode, syntax elements HelpBar/HelpStar are
shown in HIGH CONTRAST). This is not an expected behavior. The root cause of
this issue is not in the colorscheme itself; it just colors those elements in
high contrast on purpose instead of linking them to 'Ignore' so that it makes
it easier to edit Vim help hypertexts.

                                                                           |TOC|


==============================================================================
10
HISTORY                                {{{1                   *briofita-history*


Below are the release notes of Briofita.

------------------------------------------------------------------------------
Note: As a general rule only the most recent versions of Briofita will be
      kept in the Vim web site. As the site does not have per version
      download counts it is not possible to know if there is still a "fan" of
      an older version; but you can in time send an e-mail to the author
      requesting him not to delete a specific previous version (please put
      "[Vim]" in the subject of the message).
------------------------------------------------------------------------------


------------------------------------------------------------------------------

v2.0.3 (May, 2013)~
	- Reduced contrasting background in a few highlights of these syntaxes:
	  Sql,PL/SQL,Fountain,Vim Language.
	- Increased contrasting background of the IncSearch highlight.
	- Corrections and improvements in the help text.

v2.0.2 (May, 2013)~
    - Changed the default for Search highlight. Cleaned plugin and help files.

v2.0.1 (May, 2013)~
    - Code cleaning. Bug fix: corrected some leftovers from previous development.

v2.0.0 (May, 2013)~
    - Increased major number due to the change in global parameter names. They
	  are not compatible with the previous version.
	- If you have upgraded from a previous version of the colorscheme,
	  please REVIEW your parameters.
	- Added a help file in the the "doc" sub-directory. Most of the text
	  previously in the Vim online page has been moved into the help file.
	- Added a "plugin" file as an example of use of the colorscheme by a
	  script. Please keep in mind that this "plugin" is just an example (at
	  least in this release).
	- Improved highlights for the syntaxes I more frequently use.
	- Previously there were just one huge internal highlights dictionary,
	  this has now been split into small dictionaries for easier change.
	- Suavization of style (less red, less high contrast).
	- Bug fixes and functions improvements.
	- Added option for alternative folding highlights.
    - Most user options are now implemented via global dictionary, keys being
	  lowercase names. The tabpage local option for for cursorline" still
	  uses the same "t:" variable as before.
	- Added an "statusline" option, which may have 0 or 1 values.
	  Highlights for StatusLine will be effective only if the value of this
	  option is 1. Use the value 0 if you want not to affect the highlight set
	  by your preferred Status Line plugin.

v1.5.0 (August, 2012)~
	- Improved color highlights of a few elements.
	- Added an informative function, g:BriofitaVersion. A string with the
	  colorscheme version number is shown if you issue a command like this:
	  ":echo g:BriofitaVersion()". If Briofita is the current color, some
	  parameter information is shown, too.
	- Added a parameter variable for distractionless editing mode.
	- ColorColumn option now accepts 3, meaning 'do not set usual ColorColumn
	  highlight' for that mode.
	- All options defaults are now zero.
	- Parameter variables are reset to default value if outside the proper
	  range.

v1.1 to v.1.4 (July, 2012)~
	- Bug fix on option for CursorLineNr.
	- Improved defaults logic.
	- Improved option *choice_for_colorcolumn.
	- Bug fix on option *choice_for_cursorline.

v1.0~
    FIRST RELEASE NOTES (July, 2012)~
    - Designed only for Vim GUI (gvim); terminals are not supported.
    - Intended for use in Vim versions from v7.3 on.
    - Tested with gVim 7.3 under Precise Pangolin Ubuntu Linux.
    - Background in a shaded dark green color.
    - It displays most of the text in nuances of green, blue, purple or violet,
      although the style is not uniform among different syntaxes.
    - For better contrast it uses red or reverse highlight in a few syntactic
      items of each filetype; in Python indentation errors, for example.
    - It sets a red ICursor via Vim 'guicursor' option.
    - A few highlights can be changed by the user via global options.
                                                                           |TOC|


==============================================================================
11
TODO                                   {{{1                      *briofita-todo*

	- Show each 't:' tabpage-local variable currently set in the output string
	  of the information function g:BriofitaVersion().

	- Add to this help file a list of the highlights which are connected with
	  each global option variable.

    - Future support for non-GUI Vim (terminals) in not a priority (at least
	  now) because you may try one of the Vim plugins that perform automated
	  conversion of colorschemes from GUI to terminal. Please search the Vim
	  online site to choose one. Note that a few non-GUI highlights (TabLine
	  for example) have been included in the colorscheme.

    - Set a common style among different syntaxes.
      Currently each syntax has its own style because the colors for each one
      were chosen "by hand": ie by using them upon real sources and modifying
	  them as needed. It HAD to be done that way to circumvent the quirks and
	  flaws of each syntax: even similarly named syntax elements may behave
	  differently due to syntax implementation differences... Maybe we might
	  add more "normalized" colors for basic elements... such that some future
	  "final version" of the colorscheme we will have similar styles among
	  different syntaxes.

	- Enable an easy "adaptation" of the colorscheme to lighting conditions,
	  via some parameter or option. This need was perceived recently, when I
	  had to attend a course in a sunlit room; crowded as it was, I could not
	  move from my desk near the window, so I had to use some other, brighter
	  colorscheme.


                                                                           |TOC|


==============================================================================
Modeline: {{{1
vim:ts=4:tw=78:ft=help:norl:fdm=marker:
